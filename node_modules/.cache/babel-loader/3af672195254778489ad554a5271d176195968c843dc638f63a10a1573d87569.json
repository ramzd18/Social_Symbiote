{"ast":null,"code":"// import React from 'react';\n// function ProgressCircle({ progress }) {\n//   const radius = 50;\n//   const strokeWidth = 10;\n//   const normalizedRadius = radius - strokeWidth / 2;\n//   const circumference = normalizedRadius * 2 * Math.PI;\n//   // Ensure progress is between 0 and 1\n//   const validProgress = Math.min(Math.max(progress, 0), 1);\n//   const strokeDashoffset = circumference - validProgress * circumference;\n//   return (\n//     <svg\n//       height={radius * 2}\n//       width={radius * 2}\n//     >\n//       <circle\n//         stroke=\"green\"\n//         fill=\"red\"\n//         strokeWidth={strokeWidth}\n//         strokeDasharray={circumference}\n//         style={{ strokeDashoffset }}\n//         r={normalizedRadius}\n//         cx={radius}\n//         cy={radius}\n//       />\n//     </svg>\n//   );\n// }\n// export default ProgressCircle;\nimport React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProgressCircle(_ref){let{progress}=_ref;const radius=50;const strokeWidth=10;const normalizedRadius=radius-strokeWidth/2;const circumference=normalizedRadius*2*Math.PI;// Ensure progress is between 0 and 1\nconst validProgress=Math.min(Math.max(progress,0),1);const strokeDashoffset=circumference-validProgress*circumference;return/*#__PURE__*/_jsxs(\"svg\",{height:radius*2,width:radius*2,children:[/*#__PURE__*/_jsx(\"circle\",{stroke:\"red\",fill:\"transparent\",strokeWidth:strokeWidth,r:normalizedRadius,cx:radius,cy:radius}),/*#__PURE__*/_jsx(\"circle\",{stroke:\"green\",fill:\"transparent\",strokeWidth:strokeWidth,strokeDasharray:circumference,style:{strokeDashoffset},r:normalizedRadius,cx:radius,cy:radius})]});}export default ProgressCircle;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ProgressCircle","_ref","progress","radius","strokeWidth","normalizedRadius","circumference","Math","PI","validProgress","min","max","strokeDashoffset","height","width","children","stroke","fill","r","cx","cy","strokeDasharray","style"],"sources":["/Users/kanshruti/Documents/GitHub/Social_Symbiote/src/componets/ProgressCircle.jsx"],"sourcesContent":["// import React from 'react';\n\n// function ProgressCircle({ progress }) {\n//   const radius = 50;\n//   const strokeWidth = 10;\n//   const normalizedRadius = radius - strokeWidth / 2;\n//   const circumference = normalizedRadius * 2 * Math.PI;\n\n//   // Ensure progress is between 0 and 1\n//   const validProgress = Math.min(Math.max(progress, 0), 1);\n//   const strokeDashoffset = circumference - validProgress * circumference;\n\n//   return (\n//     <svg\n//       height={radius * 2}\n//       width={radius * 2}\n//     >\n//       <circle\n//         stroke=\"green\"\n//         fill=\"red\"\n//         strokeWidth={strokeWidth}\n//         strokeDasharray={circumference}\n//         style={{ strokeDashoffset }}\n//         r={normalizedRadius}\n//         cx={radius}\n//         cy={radius}\n//       />\n//     </svg>\n//   );\n// }\n\n// export default ProgressCircle;\nimport React from 'react';\n\nfunction ProgressCircle({ progress }) {\n  const radius = 50;\n  const strokeWidth = 10;\n  const normalizedRadius = radius - strokeWidth / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n\n  // Ensure progress is between 0 and 1\n  const validProgress = Math.min(Math.max(progress, 0), 1);\n  const strokeDashoffset = circumference - validProgress * circumference;\n\n  return (\n    <svg\n      height={radius * 2}\n      width={radius * 2}\n    >\n      {/* Red Circle (Background) */}\n      <circle\n        stroke=\"red\"\n        fill=\"transparent\"\n        strokeWidth={strokeWidth}\n        r={normalizedRadius}\n        cx={radius}\n        cy={radius}\n      />\n\n      {/* Green Circle (Progress) */}\n      <circle\n        stroke=\"green\"\n        fill=\"transparent\"\n        strokeWidth={strokeWidth}\n        strokeDasharray={circumference}\n        style={{ strokeDashoffset }}\n        r={normalizedRadius}\n        cx={radius}\n        cy={radius}\n      />\n    </svg>\n  );\n}\n\nexport default ProgressCircle;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAAE,MAAM,CAAG,EAAE,CACjB,KAAM,CAAAC,WAAW,CAAG,EAAE,CACtB,KAAM,CAAAC,gBAAgB,CAAGF,MAAM,CAAGC,WAAW,CAAG,CAAC,CACjD,KAAM,CAAAE,aAAa,CAAGD,gBAAgB,CAAG,CAAC,CAAGE,IAAI,CAACC,EAAE,CAEpD;AACA,KAAM,CAAAC,aAAa,CAAGF,IAAI,CAACG,GAAG,CAACH,IAAI,CAACI,GAAG,CAACT,QAAQ,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACxD,KAAM,CAAAU,gBAAgB,CAAGN,aAAa,CAAGG,aAAa,CAAGH,aAAa,CAEtE,mBACEP,KAAA,QACEc,MAAM,CAAEV,MAAM,CAAG,CAAE,CACnBW,KAAK,CAAEX,MAAM,CAAG,CAAE,CAAAY,QAAA,eAGlBlB,IAAA,WACEmB,MAAM,CAAC,KAAK,CACZC,IAAI,CAAC,aAAa,CAClBb,WAAW,CAAEA,WAAY,CACzBc,CAAC,CAAEb,gBAAiB,CACpBc,EAAE,CAAEhB,MAAO,CACXiB,EAAE,CAAEjB,MAAO,CACZ,CAAC,cAGFN,IAAA,WACEmB,MAAM,CAAC,OAAO,CACdC,IAAI,CAAC,aAAa,CAClBb,WAAW,CAAEA,WAAY,CACzBiB,eAAe,CAAEf,aAAc,CAC/BgB,KAAK,CAAE,CAAEV,gBAAiB,CAAE,CAC5BM,CAAC,CAAEb,gBAAiB,CACpBc,EAAE,CAAEhB,MAAO,CACXiB,EAAE,CAAEjB,MAAO,CACZ,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}