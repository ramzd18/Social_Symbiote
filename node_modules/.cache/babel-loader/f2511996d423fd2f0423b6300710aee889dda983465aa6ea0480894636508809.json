{"ast":null,"code":"import React from'react';import LeftSidebarperson from'./Leftsidebarperson';import{Link}from'react-router-dom';import{useEffect,useState,useRef}from'react';import{userdata}from'./Signin';import{jwtDecode}from\"jwt-decode\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Person(){const[agentNames,setAgentNames]=useState([]);const[agentName,setAgentName]=useState('');const[agentAges,setAgentAges]=useState([]);const[agentAge,setAgentAge]=useState('');const[agentDescs,setAgentDescs]=useState([]);const[agentDesc,setAgentDesc]=useState('');const[agentLastInterviews,setAgentLastInterviews]=useState([]);const[agentLastInterview,setAgentLastInterview]=useState('');const[agentGenders,setAgentGenders]=useState([]);const[agentGender,setAgentGender]=useState('');const[agentJobs,setAgentJobs]=useState([]);const[agentJob,setAgentJob]=useState('');// const apiBaseUrl = process.env.NODE_ENV === 'production'\n// ? 'https://alias-testing.herokuapp.com'\n// : 'http://localhost:5433';\nconst token=sessionStorage.getItem('token');const isFirstRun=useRef(true);console.log(token);const decoded=jwtDecode(token);console.log(decoded);// Now you can access the user data in the decoded object\nconst{user:userObject}=decoded;console.log(userObject);useEffect(()=>{fetch(\"https://alias-node-9851227f2446.herokuapp.com/getAgentName\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:userObject.email})// Ensure the body is an object\n}).then(response=>response.json())// Try parsing response as JSON\n.then(data=>{{/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}if(data.names){console.log('Multiple Names:',data.names);// Store the array in the state or variable\nsetAgentNames(data.names);setAgentName('');}else if(data.name){console.log('Single Name:',data.name);// Handle a single name separately\nsetAgentName(data.name);setAgentNames([]);}else{console.error('Error:',data);// Log any unexpected response\n}// ... rest of your code\n}).catch(error=>console.error('Error:',error));fetch(\"https://alias-node-9851227f2446.herokuapp.com/getAgentDesc\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:userObject.email})// Ensure the body is an object\n}).then(response=>response.json())// Try parsing response as JSON\n.then(data=>{{/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}if(data.descs){console.log('Multiple Descriptions:',data.descs);// Store the array in the state or variable\nsetAgentDescs(data.descs);setAgentDesc('');}else if(data.desc){console.log('Single Name:',data.desc);// Handle a single name separately\nsetAgentDesc(data.desc);setAgentDescs([]);}else{console.error('Error:',data);// Log any unexpected response\n}// ... rest of your code\n}).catch(error=>console.error('Error:',error));fetch(\"https://alias-node-9851227f2446.herokuapp.com/getAgentJob\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:userObject.email})// Ensure the body is an object\n}).then(response=>response.json())// Try parsing response as JSON\n.then(data=>{{/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}if(data.jobs){console.log('Multiple Jobs:',data.jobs);// Store the array in the state or variable\nsetAgentJobs(data.jobs);setAgentJob('');}else if(data.job){console.log('Single Job:',data.job);// Handle a single name separately\nsetAgentJob(data.desc);setAgentJobs([]);}else{console.error('Error:',data);// Log any unexpected response\n}// ... rest of your code\n}).catch(error=>console.error('Error:',error));fetch(\"https://alias-node-9851227f2446.herokuapp.com/getAgentLastInterview\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:userObject.email})// Ensure the body is an object\n}).then(response=>response.json())// Try parsing response as JSON\n.then(data=>{{/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}if(data.days){console.log('Multiple Interviews:',data.days);// Store the array in the state or variable\nsetAgentLastInterviews(data.days);setAgentLastInterview('');}else if(data.day){console.log('Single Interview:',data.day);// Handle a single name separately\nsetAgentLastInterview(data.day);setAgentLastInterviews([]);}else{console.error('Error:',data);// Log any unexpected response\n}// ... rest of your code\n}).catch(error=>console.error('Error:',error));fetch(\"https://alias-node-9851227f2446.herokuapp.com/getAgentGender\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:userObject.email})// Ensure the body is an object\n}).then(response=>response.json())// Try parsing response as JSON\n.then(data=>{{/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}if(data.genders){console.log('Multiple Genders:',data.genders);// Store the array in the state or variable\nsetAgentGenders(data.genders);setAgentGender('');}else if(data.gender){console.log('Single Gender:',data.gender);// Handle a single name separately\nsetAgentGender(data.gender);setAgentGenders([]);}else{console.error('Error:',data);// Log any unexpected response\n}// ... rest of your code\n}).catch(error=>console.error('Error:',error));fetch(\"https://alias-node-9851227f2446.herokuapp.com/getAgentAge\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:userObject.email})}).then(response=>response.json()).then(data=>{if(data.ages){console.log('Multiple Ages:',data.ages);// Store the array in the state or variable\nsetAgentAges(data.ages);setAgentAge('');}else if(data.age){console.log('Single Ages:',data.age);// Handle a single name separately\nsetAgentAge(data.age);setAgentAges([]);}else{console.error('Error:',data);// Log any unexpected response\n}/* console.log('Agent Age:', data.age);\r\n                setAgentAge(data.age); */}).catch(error=>console.error('Error:',error));},[]);useEffect(()=>{if(agentNames.length>0){agentNames.forEach((name,index)=>{console.log('Name:',name);fetch(\"https://alias-node-9851227f2446.herokuapp.com/updateProfilePicture\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:name,profile_picture:index+1})}).then(response=>response.json()).then(data=>{console.log('Response Data:',data);// Handle any UI changes or further actions if needed\n}).catch(error=>{console.error('Error:',error);});});}},[agentNames]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"section\",{className:\"home container-fluid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(LeftSidebarperson,{})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 bperson\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bperson-inner-childs\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"person\",children:/*#__PURE__*/_jsx(Link,{to:\"/popup\",children:/*#__PURE__*/_jsxs(\"button\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"./add.svg\"}),/*#__PURE__*/_jsx(\"span\",{children:\" New Persona\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:agentNames.map((name,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"personcard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"car1 d-flex\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/avatars/\").concat(agentGenders[index],\"/\").concat(index+1,\".svg\"),alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"car1text\",children:[/*#__PURE__*/_jsx(\"h5\",{children:name}),/*#__PURE__*/_jsxs(\"p\",{children:[agentAges[index],\" yrs - \",agentJobs[index]]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"car2\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Last Interviewed: Today\"}),/*#__PURE__*/_jsxs(\"p\",{children:[agentDescs[index],\" \"]})]})]},index))})]})})]})});}export default Person;","map":{"version":3,"names":["React","LeftSidebarperson","Link","useEffect","useState","useRef","userdata","jwtDecode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Person","agentNames","setAgentNames","agentName","setAgentName","agentAges","setAgentAges","agentAge","setAgentAge","agentDescs","setAgentDescs","agentDesc","setAgentDesc","agentLastInterviews","setAgentLastInterviews","agentLastInterview","setAgentLastInterview","agentGenders","setAgentGenders","agentGender","setAgentGender","agentJobs","setAgentJobs","agentJob","setAgentJob","token","sessionStorage","getItem","isFirstRun","console","log","decoded","user","userObject","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","names","name","error","catch","descs","desc","jobs","job","days","day","genders","gender","ages","age","length","forEach","index","profile_picture","children","className","to","src","map","concat","process","env","PUBLIC_URL","alt"],"sources":["/Users/kanshruti/Documents/GitHub/Social_Symbiote/src/componets/Person.jsx"],"sourcesContent":["import React from 'react'\r\nimport LeftSidebarperson from './Leftsidebarperson'\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { userdata } from './Signin';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\n\r\nfunction Person() {\r\n    const [agentNames, setAgentNames] = useState([]);\r\n    const [agentName, setAgentName] = useState('');\r\n    const [agentAges, setAgentAges] = useState([]);\r\n    const [agentAge, setAgentAge] = useState('');\r\n    const [agentDescs, setAgentDescs] = useState([]);\r\n    const [agentDesc, setAgentDesc] = useState('');\r\n    const [agentLastInterviews, setAgentLastInterviews] = useState([]);\r\n    const [agentLastInterview, setAgentLastInterview] = useState('');\r\n    const [agentGenders, setAgentGenders] = useState([]);\r\n    const [agentGender, setAgentGender] = useState('');\r\n    const [agentJobs, setAgentJobs] = useState([]);\r\n    const [agentJob, setAgentJob] = useState('');\r\n\r\n    // const apiBaseUrl = process.env.NODE_ENV === 'production'\r\n    // ? 'https://alias-testing.herokuapp.com'\r\n    // : 'http://localhost:5433';\r\n\r\n    const token = sessionStorage.getItem('token');\r\n    const isFirstRun = useRef(true);\r\n    console.log(token)\r\n\r\n\r\n\r\n        const decoded = jwtDecode(token);\r\n        console.log(decoded);\r\n        // Now you can access the user data in the decoded object\r\n\r\n\r\n    const { user: userObject } = decoded;\r\n    console.log(userObject);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(`https://alias-node-9851227f2446.herokuapp.com/getAgentName`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.names) {\r\n                console.log('Multiple Names:', data.names);\r\n                // Store the array in the state or variable\r\n                setAgentNames(data.names);\r\n                setAgentName('');\r\n            } else if (data.name) {\r\n                console.log('Single Name:', data.name);\r\n                // Handle a single name separately\r\n                setAgentName(data.name);\r\n                setAgentNames([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n        \r\n        fetch(`https://alias-node-9851227f2446.herokuapp.com/getAgentDesc`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.descs) {\r\n                console.log('Multiple Descriptions:', data.descs);\r\n                // Store the array in the state or variable\r\n                setAgentDescs(data.descs);\r\n                setAgentDesc('');\r\n            } else if (data.desc) {\r\n                console.log('Single Name:', data.desc);\r\n                // Handle a single name separately\r\n                setAgentDesc(data.desc);\r\n                setAgentDescs([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n\r\n        fetch(`https://alias-node-9851227f2446.herokuapp.com/getAgentJob`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.jobs) {\r\n                console.log('Multiple Jobs:', data.jobs);\r\n                // Store the array in the state or variable\r\n                setAgentJobs(data.jobs);\r\n                setAgentJob('');\r\n            } else if (data.job) {\r\n                console.log('Single Job:', data.job);\r\n                // Handle a single name separately\r\n                setAgentJob(data.desc);\r\n                setAgentJobs([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n\r\n\r\n        fetch(`https://alias-node-9851227f2446.herokuapp.com/getAgentLastInterview`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.days) {\r\n                console.log('Multiple Interviews:', data.days);\r\n                // Store the array in the state or variable\r\n                setAgentLastInterviews(data.days);\r\n                setAgentLastInterview('');\r\n            } else if (data.day) {\r\n                console.log('Single Interview:', data.day);\r\n                // Handle a single name separately\r\n                setAgentLastInterview(data.day);\r\n                setAgentLastInterviews([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n\r\n        fetch(`https://alias-node-9851227f2446.herokuapp.com/getAgentGender`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.genders) {\r\n                console.log('Multiple Genders:', data.genders);\r\n                // Store the array in the state or variable\r\n                setAgentGenders(data.genders);\r\n                setAgentGender('');\r\n            } else if (data.gender) {\r\n                console.log('Single Gender:', data.gender);\r\n                // Handle a single name separately\r\n                setAgentGender(data.gender);\r\n                setAgentGenders([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n            \r\n\r\n\r\n        fetch(`https://alias-node-9851227f2446.herokuapp.com/getAgentAge`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }),\r\n        })\r\n        \r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.ages) {\r\n                    console.log('Multiple Ages:', data.ages);\r\n                    // Store the array in the state or variable\r\n                    setAgentAges(data.ages);\r\n                    setAgentAge('');\r\n                } else if (data.age) {\r\n                    console.log('Single Ages:', data.age);\r\n                    // Handle a single name separately\r\n                    setAgentAge(data.age);\r\n                    setAgentAges([]);\r\n                } else {\r\n                    console.error('Error:', data); // Log any unexpected response\r\n                }\r\n                /* console.log('Agent Age:', data.age);\r\n                setAgentAge(data.age); */\r\n            })\r\n            .catch((error) => console.error('Error:', error));   \r\n\r\n            }, []);\r\n\r\n            useEffect(() => {\r\n                if (agentNames.length > 0) {\r\n                    agentNames.forEach((name, index) => {\r\n                      console.log('Name:', name);\r\n                      fetch(`https://alias-node-9851227f2446.herokuapp.com/updateProfilePicture`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                          'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({ name: name, profile_picture: index + 1 }),\r\n                      })\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                          console.log('Response Data:', data);\r\n                          // Handle any UI changes or further actions if needed\r\n                        })\r\n                        .catch(error => {\r\n                          console.error('Error:', error);\r\n                        });\r\n                    });\r\n                  }\r\n              }, [agentNames]);\r\n\r\n\r\n  return (\r\n    <>\r\n    <section className='home container-fluid'>\r\n   {/*<div className=\"logo-section \"> \r\n    \r\n   </div>*/}\r\n    <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n            <LeftSidebarperson/>\r\n        </div>    \r\n        {/*}    \r\n        <div className=\"left-sidebar\">\r\n        <div className=\"sidebartop\">\r\n        <div className=\"logo\">\r\n            <img src=\"./aliaslogodarksvg.svg\" alt=\"\" srcset=\"\" />\r\n            </div>\r\n\r\n        <li className=''> <img src=\"./homeblack.svg\" alt=\"\" />Home</li>\r\n        \r\n        <li className='active'><img src=\"./personawhite.svg\" alt=\"\" />Your personas</li>\r\n        <li> <img src=\"./chatblack.svg\" alt=\"\" /> User interviews</li>\r\n        </div>\r\n        {/*}\r\n        <div className=\"sidebarbottom\">\r\n        <li> <img src=\"./tool-02.png\" alt=\"\" /> Integrations</li>\r\n        <li> <img src=\"./users-plus.png\" alt=\"\" />Billing</li>\r\n        <li><img src=\"./help outline.png\" alt=\"\" />Support</li>\r\n        </div>\r\n        */}\r\n    </div>\r\n        {/*</div>*/}\r\n        <div className=\"col-md-8 bperson\">\r\n         <div className=\"bperson-inner-childs\">\r\n             {/*}\r\n           <div className=\"project\">\r\n\r\n\r\n           <div className=\"selecti\">\r\n           <select name=\"cars\" id=\"cars\">\r\n                <option value=\"Most Recent\">Most Recent</option>\r\n                <option value=\"saab\">Saab</option>\r\n                <option value=\"mercedes\">Mercedes</option>\r\n                <option value=\"audi\">Audi</option>\r\n           </select>\r\n            </div>\r\n            \r\n                <button>+  New Project</button>\r\n               \r\n            </div>\r\n            */} \r\n\r\n            <div className=\"person\">\r\n                <Link to=\"/popup\">\r\n                    <button> \r\n                        <img src=\"./add.svg\"/>\r\n                        <span> New Persona</span>\r\n                    </button>\r\n                </Link>    \r\n            </div>\r\n\r\n            <div className =\"container\">\r\n                {agentNames.map((name, index) => (\r\n                    <div className=\"personcard\" key={index}>\r\n                    <div className=\"car1 d-flex\">\r\n                        <img src={`${process.env.PUBLIC_URL}/avatars/${agentGenders[index]}/${index + 1}.svg`} alt=\"\" />  \r\n                        <div className=\"car1text\">\r\n                        <h5>{name}</h5>\r\n                        <p>{agentAges[index]} yrs - {agentJobs[index]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"car2\">\r\n                        {/* <p>Last Interviewed: {agentLastInterviews[index]} days ago</p> */}\r\n                        <p>Last Interviewed: Today</p>\r\n                        <p>{agentDescs[index]} </p>\r\n                    </div>\r\n                    {/*<div className=\"car3\">\r\n                        <img src=\"./Group 46.png\" alt=\"\" />\r\n                    </div>\r\n                    */}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {/*}\r\n            <div className=\"personcard\">\r\n                <div className=\"car1 d-flex\">\r\n                    <img src=\"./Ellipse 63.png\" alt=\"\" />\r\n                    <div className=\"car1text\">\r\n                    <h5>{agentName}</h5>\r\n                    <p>{agentAge} yrs - Software Engineer</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"car2\">\r\n                    <p>Last Interviewed: 2 days ago</p>\r\n                    <p>A 22 year old college graduate struggling to pay<br></br> off his student debt.</p>\r\n                </div>\r\n                <div className=\"car3\">\r\n                    <img src=\"./Group 46.png\" alt=\"\" />\r\n                </div>\r\n            </div>\r\n                */}\r\n         </div>\r\n           \r\n        </div>\r\n    {/*</div> */}\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Person"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}