{"ast":null,"code":"var _jsxFileName = \"/Users/kanshruti/Documents/GitHub/Social_Symbiote/src/componets/Popup.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Leftsidebarperson from './Leftsidebarperson';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jwtDecode } from \"jwt-decode\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Popup() {\n  _s();\n  const [age, setAge] = useState('');\n  const [occupation, setOccupation] = useState('');\n  const [description, setDescription] = useState('');\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isLoading, setLoading] = useState(true); // Default loading state is true\n  const [buttonClicked, setButtonClicked] = useState(false); // Default button clicked state is false\n  const token = sessionStorage.getItem('token');\n  const decoded = jwtDecode(token);\n  const {\n    user: userObject\n  } = decoded;\n  const email = userObject.email;\n\n  // const apiBaseUrl = process.env.NODE_ENV === 'production'\n  // ? 'https://alias-testing.herokuapp.com'\n  // : 'http://localhost:5433';\n\n  const clearInformation = () => {\n    setAge('');\n    setOccupation('');\n    setDescription('');\n  };\n\n  // dont create new row with data in database with passed in info - call checkrows, if rowCount < 3 then work with Ram on api\n\n  // if (age.trim() === '' || occupation.trim() === '' || description.trim() === '') {\n  //   // If any field is empty, prevent the new persona action\n  //   alert('Please fill in all the fields to create a new persona.');\n  //   return;\n  // }\n\n  // setLoading(true);\n  // console.log(' First Loading:', isLoading)\n\n  // const response = await fetch(`http://localhost:5433/check-rows?personEmail=${email}`);\n  // const data = await response.json();\n  // const rowCount = data.rowCount; // received row count from the API\n  // console.log('Row count:', rowCount);\n\n  const handleNewPersona = async () => {\n    try {\n      if (age.trim() === '' || occupation.trim() === '' || description.trim() === '') {\n        // If any field is empty, prevent the new persona action\n        alert('Please fill in all the fields to create a new persona.');\n        return;\n      }\n\n      // Perform your asynchronous tasks...\n      const response = await fetch(`https://alias-node-9851227f2446.herokuapp.com/check-rows?personEmail=${email}`);\n      const data = await response.json();\n      const rowCount = data.rowCount; // received row count from the API\n      console.log('Row count:', rowCount);\n\n      // Update state based on the asynchronous result\n      if (rowCount < 3) {\n        const response = fetch(`https://alias-testing-130265f16331.herokuapp.com/create_agent?email=${email}&description=${description}&age=${age}&job=${occupation}`);\n        try {\n          const data = response.text();\n          console.log('Response:', data);\n        } catch (error) {\n          console.error('Error creating agent:', error);\n        }\n        setIsDisabled(false);\n      } else {\n        setIsDisabled(true);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleNewPersonaClick = async () => {\n    try {\n      await handleNewPersona(); // Call the new persona function\n    } finally {\n      // Set loading state to false after all asynchronous tasks are complete\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!isLoading && buttonClicked && !isDisabled) {\n      // Redirect to the \"/person\" page\n      // You may use react-router-dom's history or any other method for redirection\n      window.location.href = \"/person\";\n    }\n  }, [isLoading, buttonClicked, isDisabled]);\n\n  // if (rowCount < 3) {\n  //   // const response = fetch(`http://127.0.0.1:5000/create_agent?email=${email}&description=${description}&age=${age}&job=${occupation}`);\n  //   // try {\n  //   //   const data = response.text();\n  //   //   console.log('Response:', data);\n  //   // }\n  //   // catch (error) {\n  //   //   console.error('Error creating agent:', error);\n  //   // } \n\n  //   const agentNameResponse = await fetch('http://localhost:5433/getAgentName', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({ email: userObject.email }),\n  //   });\n\n  //       const agentNameData = await agentNameResponse.json();\n\n  //       if (agentNameData.names) {\n  //         console.log('Multiple Names:', data.names);\n  //       } else if (data.name) {\n  //         console.log('Single Name:', data.name);\n  //       } else {\n  //         console.error('Error:', data);\n  //       }\n\n  //   // fetch('http://localhost:5433/add-persona', {\n  //   //   method: 'POST',\n  //   //   headers: {\n  //   //     'Content-Type': 'application/json',\n  //   //   },\n  //   //   body: JSON.stringify({\n  //   //     age: age,\n  //   //     occupation: occupation,\n  //   //     description: description,\n  //   //     personEmail: email,\n  //   //   }),\n  //   // })\n  //   //   .then(response => {\n  //   //     if (response.ok) {\n  //   //       console.log('New persona added successfully');\n  //   //       // Ensure loading indicator is turned off after completion\n  //   //       setLoading(false);\n  //   //     } else {\n  //   //       console.error('Failed to add new persona');\n  //   //       setLoading(false);\n  //   //     }\n  //   //   })\n  //   //   .catch(error => {\n  //   //     console.error('Error while adding new persona:', error);\n  //   //     setLoading(false);\n  //   //   }); \n  //   // }\n  //   setLoading(false);\n  //   } else {\n  //     setIsDisabled(true);\n  //     setLoading(false); // Turn off the loading indicator if not adding a new persona\n  //   }\n  // } catch (error) {\n  //   console.error('Error:', error);\n  //   setLoading(false); // Turn off the loading indicator in case of an error\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"home container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Leftsidebarperson, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8 big\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"big-inner-childs-popup\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/person\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"backarrow\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./Arrow-Left.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 46\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"personcardpopup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Create your persona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb1\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Full Name\",\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 54\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"e.g 21\",\n                value: age,\n                onChange: e => setAge(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Full Name\",\n                children: \"Occupation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"e.g Software Engineer\",\n                value: occupation,\n                onChange: e => setOccupation(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mtextarea pt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Description\",\n              children: \"Describe your target customer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              cols: \"80\",\n              rows: \"5\",\n              placeholder: \"e.g A Gen Z recent college graduate living in New York City who is looking for an app to manage personal finances\",\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mbuttonarea text-center\",\n            children: [!isLoading ? /*#__PURE__*/_jsxDEV(Link, {\n              to: !isDisabled && age.trim() !== '' && occupation.trim() !== '' && description.trim() !== '' ? \"/person\" : \"#\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"customButton\",\n                disabled: isDisabled,\n                title: isDisabled ? 'Max personas created' : undefined,\n                onClick: () => {\n                  setButtonClicked(true);\n                  setLoading(true);\n                  handleNewPersonaClick();\n                },\n                children: \"New Persona\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"customButton\",\n                disabled: isDisabled,\n                title: isDisabled ? 'Max personas created' : undefined,\n                onClick: () => {\n                  setButtonClicked(true);\n                  setLoading(true);\n                  handleNewPersonaClick();\n                },\n                children: \"New Persona\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 11\n              }, this), buttonClicked && isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearInformation,\n              children: \"Clear Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 3\n  }, this);\n}\n_s(Popup, \"gqS5eG1IwJClMBs/TUdphJEo6wk=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","Leftsidebarperson","Link","useEffect","useState","jwtDecode","CircularProgress","jsxDEV","_jsxDEV","Fragment","_Fragment","Popup","_s","age","setAge","occupation","setOccupation","description","setDescription","isDisabled","setIsDisabled","isLoading","setLoading","buttonClicked","setButtonClicked","token","sessionStorage","getItem","decoded","user","userObject","email","clearInformation","handleNewPersona","trim","alert","response","fetch","data","json","rowCount","console","log","text","error","handleNewPersonaClick","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","htmlFor","type","placeholder","value","onChange","e","target","cols","rows","disabled","title","undefined","onClick","_c","$RefreshReg$"],"sources":["/Users/kanshruti/Documents/GitHub/Social_Symbiote/src/componets/Popup.jsx"],"sourcesContent":["import React from 'react'\r\nimport Leftsidebarperson from './Leftsidebarperson'\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n\r\nfunction Popup() {\r\n  const [age, setAge] = useState('');\r\n  const [occupation, setOccupation] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setLoading] = useState(true); // Default loading state is true\r\n  const [buttonClicked, setButtonClicked] = useState(false); // Default button clicked state is false\r\n  const token = sessionStorage.getItem('token');\r\n  const decoded = jwtDecode(token);\r\n  const { user: userObject } = decoded;\r\n  const email = userObject.email;\r\n\r\n  // const apiBaseUrl = process.env.NODE_ENV === 'production'\r\n  // ? 'https://alias-testing.herokuapp.com'\r\n  // : 'http://localhost:5433';\r\n\r\n\r\n  const clearInformation = () => {\r\n    setAge('');\r\n    setOccupation('');\r\n    setDescription('');\r\n  };\r\n\r\n  // dont create new row with data in database with passed in info - call checkrows, if rowCount < 3 then work with Ram on api\r\n\r\n\r\n    // if (age.trim() === '' || occupation.trim() === '' || description.trim() === '') {\r\n    //   // If any field is empty, prevent the new persona action\r\n    //   alert('Please fill in all the fields to create a new persona.');\r\n    //   return;\r\n    // }\r\n\r\n    // setLoading(true);\r\n    // console.log(' First Loading:', isLoading)\r\n\r\n    // const response = await fetch(`http://localhost:5433/check-rows?personEmail=${email}`);\r\n    // const data = await response.json();\r\n    // const rowCount = data.rowCount; // received row count from the API\r\n    // console.log('Row count:', rowCount);\r\n\r\n    const handleNewPersona = async () => {\r\n      try {\r\n        if (age.trim() === '' || occupation.trim() === '' || description.trim() === '') {\r\n          // If any field is empty, prevent the new persona action\r\n          alert('Please fill in all the fields to create a new persona.');\r\n          return;\r\n        }\r\n    \r\n        // Perform your asynchronous tasks...\r\n        const response = await fetch(`https://alias-node-9851227f2446.herokuapp.com/check-rows?personEmail=${email}`);\r\n        const data = await response.json();\r\n        const rowCount = data.rowCount; // received row count from the API\r\n        console.log('Row count:', rowCount);\r\n    \r\n        // Update state based on the asynchronous result\r\n        if (rowCount < 3) {\r\n          const response = fetch(`https://alias-testing-130265f16331.herokuapp.com/create_agent?email=${email}&description=${description}&age=${age}&job=${occupation}`);\r\n          try {\r\n            const data = response.text();\r\n            console.log('Response:', data);\r\n          }\r\n          catch (error) {\r\n            console.error('Error creating agent:', error);\r\n          } \r\n          setIsDisabled(false);\r\n        } else {\r\n          setIsDisabled(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n    \r\n    const handleNewPersonaClick = async () => {\r\n      try {\r\n        await handleNewPersona(); // Call the new persona function\r\n      } finally {\r\n        // Set loading state to false after all asynchronous tasks are complete\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    useEffect(() => {\r\n      if (!isLoading && buttonClicked && !isDisabled) {\r\n        // Redirect to the \"/person\" page\r\n        // You may use react-router-dom's history or any other method for redirection\r\n        window.location.href = \"/person\";\r\n      }\r\n    }, [isLoading, buttonClicked, isDisabled]);\r\n\r\n        // if (rowCount < 3) {\r\n        //   // const response = fetch(`http://127.0.0.1:5000/create_agent?email=${email}&description=${description}&age=${age}&job=${occupation}`);\r\n        //   // try {\r\n        //   //   const data = response.text();\r\n        //   //   console.log('Response:', data);\r\n        //   // }\r\n        //   // catch (error) {\r\n        //   //   console.error('Error creating agent:', error);\r\n        //   // } \r\n          \r\n\r\n        //   const agentNameResponse = await fetch('http://localhost:5433/getAgentName', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //       'Content-Type': 'application/json',\r\n        //     },\r\n        //     body: JSON.stringify({ email: userObject.email }),\r\n        //   });\r\n\r\n        //       const agentNameData = await agentNameResponse.json();\r\n\r\n        //       if (agentNameData.names) {\r\n        //         console.log('Multiple Names:', data.names);\r\n        //       } else if (data.name) {\r\n        //         console.log('Single Name:', data.name);\r\n        //       } else {\r\n        //         console.error('Error:', data);\r\n        //       }\r\n    \r\n        //   // fetch('http://localhost:5433/add-persona', {\r\n        //   //   method: 'POST',\r\n        //   //   headers: {\r\n        //   //     'Content-Type': 'application/json',\r\n        //   //   },\r\n        //   //   body: JSON.stringify({\r\n        //   //     age: age,\r\n        //   //     occupation: occupation,\r\n        //   //     description: description,\r\n        //   //     personEmail: email,\r\n        //   //   }),\r\n        //   // })\r\n        //   //   .then(response => {\r\n        //   //     if (response.ok) {\r\n        //   //       console.log('New persona added successfully');\r\n        //   //       // Ensure loading indicator is turned off after completion\r\n        //   //       setLoading(false);\r\n        //   //     } else {\r\n        //   //       console.error('Failed to add new persona');\r\n        //   //       setLoading(false);\r\n        //   //     }\r\n        //   //   })\r\n        //   //   .catch(error => {\r\n        //   //     console.error('Error while adding new persona:', error);\r\n        //   //     setLoading(false);\r\n        //   //   }); \r\n        //   // }\r\n        //   setLoading(false);\r\n        //   } else {\r\n        //     setIsDisabled(true);\r\n        //     setLoading(false); // Turn off the loading indicator if not adding a new persona\r\n        //   }\r\n        // } catch (error) {\r\n        //   console.error('Error:', error);\r\n        //   setLoading(false); // Turn off the loading indicator in case of an error\r\n        // }\r\n      \r\n  return (\r\n  \r\n\r\n  <section className='home container-fluid'>\r\n   \r\n   {/*<div className=\"logo-section \">\r\n    \r\n  </div> */}\r\n    <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <Leftsidebarperson/>\r\n        </div>\r\n        {/*}  \r\n        <div className=\"left-sidebar\">\r\n        <div className=\"sidebartop\">\r\n        <div className=\"logo\">\r\n   <img src=\"./aliaslogodarksvg.svg\" alt=\"\" srcset=\"\" />\r\n   </div>\r\n   \r\n        <li className=''> <img src=\"./homeblack.svg\" alt=\"\" />Home</li>\r\n        \r\n        <li className='active'><img src=\"./personawhite.svg\" alt=\"\" />Your personas</li>\r\n        <li> <img src=\"./chatblack.svg\" alt=\"\" /> User interviews</li>\r\n        </div>\r\n\r\n        <div className=\"sidebarbottom\">\r\n        <li> <img src=\"./tool-02.png\" alt=\"\" /> Integrations</li>\r\n        <li> <img src=\"./users-plus.png\" alt=\"\" />Billing</li>\r\n        <li><img src=\"./help outline.png\" alt=\"\" />Support</li>\r\n        </div>\r\n        */}\r\n\r\n    </div>\r\n        {/*</div> */}\r\n        <div className=\"col-md-8 big\">\r\n         <div className=\"big-inner-childs-popup\">\r\n            <Link to=\"/person\">\r\n              <button className=\"backarrow\"> <img src= \"./Arrow-Left.svg\" /> </button>\r\n            </Link>\r\n          <div className=\"personcardpopup\">\r\n            <h4>Create your persona</h4>\r\n          <div className=\"popup\">\r\n            <div className=\"lb1\">\r\n              <label htmlFor=\"Full Name\">Age:</label><br></br>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"e.g 21\"\r\n                  value={age}\r\n                  onChange={(e) => setAge(e.target.value)}\r\n                />\r\n            </div>\r\n                    <div className=\"lb2\">\r\n                      <label htmlFor=\"Full Name\">Occupation:</label><br></br>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"e.g Software Engineer\"\r\n                        value={occupation}\r\n                        onChange={(e) => setOccupation(e.target.value)}\r\n                      />\r\n                    </div> \r\n\r\n                                \r\n        </div>\r\n        <div className=\"mtextarea pt-5\">\r\n                <label htmlFor=\"Description\">Describe your target customer:</label><br></br>\r\n                <textarea\r\n                  cols=\"80\"\r\n                  rows=\"5\"\r\n                  placeholder=\"e.g A Gen Z recent college graduate living in New York City who is looking for an app to manage personal finances\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n        </div>  \r\n\r\n        <div className=\"mbuttonarea text-center\">\r\n      {!isLoading ? (\r\n        <Link\r\n          to={\r\n            !isDisabled && age.trim() !== '' && occupation.trim() !== '' && description.trim() !== ''\r\n              ? \"/person\"\r\n              : \"#\"\r\n          }\r\n        >\r\n          <button className='customButton' disabled={isDisabled} title={isDisabled ? 'Max personas created' : undefined} onClick={() => { setButtonClicked(true); setLoading(true); handleNewPersonaClick(); }}>New Persona</button>\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          <button className='customButton' disabled={isDisabled} title={isDisabled ? 'Max personas created' : undefined} onClick={() => { setButtonClicked(true); setLoading(true); handleNewPersonaClick(); }}>New Persona</button>\r\n          {buttonClicked && isLoading && <CircularProgress />}\r\n        </>\r\n      )}\r\n      <button onClick={clearInformation}>Clear Information</button>\r\n    </div>\r\n         </div>\r\n         </div>\r\n           \r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Popup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}