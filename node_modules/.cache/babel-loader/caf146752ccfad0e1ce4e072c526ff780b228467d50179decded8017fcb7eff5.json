{"ast":null,"code":"import React from'react';import Leftsidebarperson from'./Leftsidebarperson';import{Link}from'react-router-dom';import{useEffect,useState}from'react';import{jwtDecode}from\"jwt-decode\";import CircularProgress from'@mui/material/CircularProgress';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Popup(){const[age,setAge]=useState('');const[occupation,setOccupation]=useState('');const[description,setDescription]=useState('');const[isDisabled,setIsDisabled]=useState(false);const[isLoading,setLoading]=useState(true);// Default loading state is true\nconst[buttonClicked,setButtonClicked]=useState(false);// Default button clicked state is false\nconst token=sessionStorage.getItem('token');const decoded=jwtDecode(token);const{user:userObject}=decoded;const email=userObject.email;// const apiBaseUrl = process.env.NODE_ENV === 'production'\n// ? 'https://alias-testing.herokuapp.com'\n// : 'http://localhost:5433';\nconst clearInformation=()=>{setAge('');setOccupation('');setDescription('');};// dont create new row with data in database with passed in info - call checkrows, if rowCount < 3 then work with Ram on api\n// if (age.trim() === '' || occupation.trim() === '' || description.trim() === '') {\n//   // If any field is empty, prevent the new persona action\n//   alert('Please fill in all the fields to create a new persona.');\n//   return;\n// }\n// setLoading(true);\n// console.log(' First Loading:', isLoading)\n// const response = await fetch(`http://localhost:5433/check-rows?personEmail=${email}`);\n// const data = await response.json();\n// const rowCount = data.rowCount; // received row count from the API\n// console.log('Row count:', rowCount);\nconst handleNewPersona=async()=>{try{if(age.trim()===''||occupation.trim()===''||description.trim()===''){// If any field is empty, prevent the new persona action\nalert('Please fill in all the fields to create a new persona.');return;}// Perform your asynchronous tasks...\nconst response=await fetch(\"https://alias-node-9851227f2446.herokuapp.com/check-rows?personEmail=\".concat(email));const data=await response.json();const rowCount=data.rowCount;// received row count from the API\nconsole.log('Row count:',rowCount);// Update state based on the asynchronous result\nif(rowCount<3){const response=fetch(\"https://alias-testing-130265f16331.herokuapp.com/create_agent?email=\".concat(email,\"&description=\").concat(description,\"&age=\").concat(age,\"&job=\").concat(occupation));try{console.log('Response:',response);const checkCreate=()=>{fetch(\"https://alias-testing-130265f16331.herokuapp.com/check?key=description\").then(response=>response.json()).then(data=>{if(data&&data.status==='finished'){setLoading(false);}else{setLoading(true);setTimeout(checkCreate,10000);}}).catch(error=>{console.error('Error:',error);});};// Start the recursive call\ncheckCreate();}catch(error){console.error('Error creating agent:',error);}setIsDisabled(false);}else{setIsDisabled(true);}}catch(error){console.error('Error:',error);}};const handleNewPersonaClick=async()=>{try{await handleNewPersona();// Call the new persona function\n}catch(error){console.error('Error:',error);}// } finally {\n//   // Set loading state to false after all asynchronous tasks are complete\n//   setLoading(false);\n// }\n};useEffect(()=>{if(!isLoading&&buttonClicked&&!isDisabled){// Redirect to the \"/person\" page\n// You may use react-router-dom's history or any other method for redirection\nwindow.location.href=\"/person\";}},[isLoading,buttonClicked,isDisabled]);// if (rowCount < 3) {\n//   // const response = fetch(`http://127.0.0.1:5000/create_agent?email=${email}&description=${description}&age=${age}&job=${occupation}`);\n//   // try {\n//   //   const data = response.text();\n//   //   console.log('Response:', data);\n//   // }\n//   // catch (error) {\n//   //   console.error('Error creating agent:', error);\n//   // } \n//   const agentNameResponse = await fetch('http://localhost:5433/getAgentName', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({ email: userObject.email }),\n//   });\n//       const agentNameData = await agentNameResponse.json();\n//       if (agentNameData.names) {\n//         console.log('Multiple Names:', data.names);\n//       } else if (data.name) {\n//         console.log('Single Name:', data.name);\n//       } else {\n//         console.error('Error:', data);\n//       }\n//   // fetch('http://localhost:5433/add-persona', {\n//   //   method: 'POST',\n//   //   headers: {\n//   //     'Content-Type': 'application/json',\n//   //   },\n//   //   body: JSON.stringify({\n//   //     age: age,\n//   //     occupation: occupation,\n//   //     description: description,\n//   //     personEmail: email,\n//   //   }),\n//   // })\n//   //   .then(response => {\n//   //     if (response.ok) {\n//   //       console.log('New persona added successfully');\n//   //       // Ensure loading indicator is turned off after completion\n//   //       setLoading(false);\n//   //     } else {\n//   //       console.error('Failed to add new persona');\n//   //       setLoading(false);\n//   //     }\n//   //   })\n//   //   .catch(error => {\n//   //     console.error('Error while adding new persona:', error);\n//   //     setLoading(false);\n//   //   }); \n//   // }\n//   setLoading(false);\n//   } else {\n//     setIsDisabled(true);\n//     setLoading(false); // Turn off the loading indicator if not adding a new persona\n//   }\n// } catch (error) {\n//   console.error('Error:', error);\n//   setLoading(false); // Turn off the loading indicator in case of an error\n// }\nreturn/*#__PURE__*/_jsxs(\"section\",{className:\"home container-fluid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(Leftsidebarperson,{})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 big\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"big-inner-childs-popup\",children:[/*#__PURE__*/_jsx(Link,{to:\"/person\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"backarrow\",children:[\" \",/*#__PURE__*/_jsx(\"img\",{src:\"./Arrow-Left.svg\"}),\" \"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"personcardpopup\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Create your persona\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"popup\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lb1\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"Full Name\",children:\"Age:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"e.g 21\",value:age,onChange:e=>setAge(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"lb2\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"Full Name\",children:\"Occupation:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"e.g Software Engineer\",value:occupation,onChange:e=>setOccupation(e.target.value)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mtextarea pt-5\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"Description\",children:\"Describe your target customer:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{cols:\"80\",rows:\"5\",placeholder:\"e.g A Gen Z recent college graduate living in New York City who is looking for an app to manage personal finances\",value:description,onChange:e=>setDescription(e.target.value)})]}),!isLoading?/*#__PURE__*/_jsx(Link,{to:!isDisabled&&age.trim()!==''&&occupation.trim()!==''&&description.trim()!==''?\"/person\":\"#\",children:/*#__PURE__*/_jsx(\"button\",{className:\"customButton\",disabled:isDisabled,title:isDisabled?'Max personas created':undefined,onClick:()=>{setButtonClicked(true);setLoading(true);handleNewPersonaClick();},children:\"New Persona\"})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"button\",{className:\"customButton\",disabled:isDisabled,title:isDisabled?'Max personas created':undefined,onClick:()=>{setButtonClicked(true);setLoading(true);handleNewPersonaClick();},children:[buttonClicked&&isLoading&&/*#__PURE__*/_jsx(CircularProgress,{size:24,color:\"inherit\"}),\"New Persona\"]})}),/*#__PURE__*/_jsx(\"button\",{onClick:clearInformation,children:\"Clear Information\"})]})]})})]});}export default Popup;","map":{"version":3,"names":["React","Leftsidebarperson","Link","useEffect","useState","jwtDecode","CircularProgress","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Popup","age","setAge","occupation","setOccupation","description","setDescription","isDisabled","setIsDisabled","isLoading","setLoading","buttonClicked","setButtonClicked","token","sessionStorage","getItem","decoded","user","userObject","email","clearInformation","handleNewPersona","trim","alert","response","fetch","concat","data","json","rowCount","console","log","checkCreate","then","status","setTimeout","catch","error","handleNewPersonaClick","window","location","href","className","children","to","src","htmlFor","type","placeholder","value","onChange","e","target","cols","rows","disabled","title","undefined","onClick","size","color"],"sources":["/Users/kanshruti/Documents/GitHub/Social_Symbiote/src/componets/Popup.jsx"],"sourcesContent":["import React from 'react'\r\nimport Leftsidebarperson from './Leftsidebarperson'\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n\r\nfunction Popup() {\r\n  const [age, setAge] = useState('');\r\n  const [occupation, setOccupation] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setLoading] = useState(true); // Default loading state is true\r\n  const [buttonClicked, setButtonClicked] = useState(false); // Default button clicked state is false\r\n  const token = sessionStorage.getItem('token');\r\n  const decoded = jwtDecode(token);\r\n  const { user: userObject } = decoded;\r\n  const email = userObject.email;\r\n\r\n  // const apiBaseUrl = process.env.NODE_ENV === 'production'\r\n  // ? 'https://alias-testing.herokuapp.com'\r\n  // : 'http://localhost:5433';\r\n\r\n\r\n  const clearInformation = () => {\r\n    setAge('');\r\n    setOccupation('');\r\n    setDescription('');\r\n  };\r\n\r\n  // dont create new row with data in database with passed in info - call checkrows, if rowCount < 3 then work with Ram on api\r\n\r\n\r\n    // if (age.trim() === '' || occupation.trim() === '' || description.trim() === '') {\r\n    //   // If any field is empty, prevent the new persona action\r\n    //   alert('Please fill in all the fields to create a new persona.');\r\n    //   return;\r\n    // }\r\n\r\n    // setLoading(true);\r\n    // console.log(' First Loading:', isLoading)\r\n\r\n    // const response = await fetch(`http://localhost:5433/check-rows?personEmail=${email}`);\r\n    // const data = await response.json();\r\n    // const rowCount = data.rowCount; // received row count from the API\r\n    // console.log('Row count:', rowCount);\r\n\r\n    const handleNewPersona = async () => {\r\n      try {\r\n        if (age.trim() === '' || occupation.trim() === '' || description.trim() === '') {\r\n          // If any field is empty, prevent the new persona action\r\n          alert('Please fill in all the fields to create a new persona.');\r\n          return;\r\n        }\r\n      \r\n        // Perform your asynchronous tasks...\r\n        const response = await fetch(`https://alias-node-9851227f2446.herokuapp.com/check-rows?personEmail=${email}`);\r\n        const data = await response.json();\r\n        const rowCount = data.rowCount; // received row count from the API\r\n        console.log('Row count:', rowCount);\r\n    \r\n        // Update state based on the asynchronous result\r\n        if (rowCount < 3) {\r\n          const response = fetch(`https://alias-testing-130265f16331.herokuapp.com/create_agent?email=${email}&description=${description}&age=${age}&job=${occupation}`);\r\n          try {\r\n            console.log('Response:', response);\r\n            const checkCreate = () => {\r\n              fetch(`https://alias-testing-130265f16331.herokuapp.com/check?key=description`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                  if (data && data.status === 'finished') {\r\n                    setLoading(false);\r\n                  } else {\r\n                    setLoading(true);\r\n                    setTimeout(checkCreate, 10000);\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.error('Error:', error);\r\n                });\r\n            };\r\n\r\n            // Start the recursive call\r\n            checkCreate();\r\n          }\r\n          catch (error) {\r\n            console.error('Error creating agent:', error);\r\n          } \r\n          setIsDisabled(false);\r\n        } else {\r\n          setIsDisabled(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n    \r\n    const handleNewPersonaClick = async () => {\r\n      try {\r\n        await handleNewPersona(); // Call the new persona function\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }  \r\n      // } finally {\r\n      //   // Set loading state to false after all asynchronous tasks are complete\r\n      //   setLoading(false);\r\n      // }\r\n    };\r\n    \r\n    useEffect(() => {\r\n      if (!isLoading && buttonClicked && !isDisabled) {\r\n        // Redirect to the \"/person\" page\r\n        // You may use react-router-dom's history or any other method for redirection\r\n        window.location.href = \"/person\";\r\n      }\r\n    }, [isLoading, buttonClicked, isDisabled]);\r\n\r\n        // if (rowCount < 3) {\r\n        //   // const response = fetch(`http://127.0.0.1:5000/create_agent?email=${email}&description=${description}&age=${age}&job=${occupation}`);\r\n        //   // try {\r\n        //   //   const data = response.text();\r\n        //   //   console.log('Response:', data);\r\n        //   // }\r\n        //   // catch (error) {\r\n        //   //   console.error('Error creating agent:', error);\r\n        //   // } \r\n          \r\n\r\n        //   const agentNameResponse = await fetch('http://localhost:5433/getAgentName', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //       'Content-Type': 'application/json',\r\n        //     },\r\n        //     body: JSON.stringify({ email: userObject.email }),\r\n        //   });\r\n\r\n        //       const agentNameData = await agentNameResponse.json();\r\n\r\n        //       if (agentNameData.names) {\r\n        //         console.log('Multiple Names:', data.names);\r\n        //       } else if (data.name) {\r\n        //         console.log('Single Name:', data.name);\r\n        //       } else {\r\n        //         console.error('Error:', data);\r\n        //       }\r\n    \r\n        //   // fetch('http://localhost:5433/add-persona', {\r\n        //   //   method: 'POST',\r\n        //   //   headers: {\r\n        //   //     'Content-Type': 'application/json',\r\n        //   //   },\r\n        //   //   body: JSON.stringify({\r\n        //   //     age: age,\r\n        //   //     occupation: occupation,\r\n        //   //     description: description,\r\n        //   //     personEmail: email,\r\n        //   //   }),\r\n        //   // })\r\n        //   //   .then(response => {\r\n        //   //     if (response.ok) {\r\n        //   //       console.log('New persona added successfully');\r\n        //   //       // Ensure loading indicator is turned off after completion\r\n        //   //       setLoading(false);\r\n        //   //     } else {\r\n        //   //       console.error('Failed to add new persona');\r\n        //   //       setLoading(false);\r\n        //   //     }\r\n        //   //   })\r\n        //   //   .catch(error => {\r\n        //   //     console.error('Error while adding new persona:', error);\r\n        //   //     setLoading(false);\r\n        //   //   }); \r\n        //   // }\r\n        //   setLoading(false);\r\n        //   } else {\r\n        //     setIsDisabled(true);\r\n        //     setLoading(false); // Turn off the loading indicator if not adding a new persona\r\n        //   }\r\n        // } catch (error) {\r\n        //   console.error('Error:', error);\r\n        //   setLoading(false); // Turn off the loading indicator in case of an error\r\n        // }\r\n      \r\n  return (\r\n  \r\n\r\n  <section className='home container-fluid'>\r\n   \r\n   {/*<div className=\"logo-section \">\r\n    \r\n  </div> */}\r\n    <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <Leftsidebarperson/>\r\n        </div>\r\n        {/*}  \r\n        <div className=\"left-sidebar\">\r\n        <div className=\"sidebartop\">\r\n        <div className=\"logo\">\r\n   <img src=\"./aliaslogodarksvg.svg\" alt=\"\" srcset=\"\" />\r\n   </div>\r\n   \r\n        <li className=''> <img src=\"./homeblack.svg\" alt=\"\" />Home</li>\r\n        \r\n        <li className='active'><img src=\"./personawhite.svg\" alt=\"\" />Your personas</li>\r\n        <li> <img src=\"./chatblack.svg\" alt=\"\" /> User interviews</li>\r\n        </div>\r\n\r\n        <div className=\"sidebarbottom\">\r\n        <li> <img src=\"./tool-02.png\" alt=\"\" /> Integrations</li>\r\n        <li> <img src=\"./users-plus.png\" alt=\"\" />Billing</li>\r\n        <li><img src=\"./help outline.png\" alt=\"\" />Support</li>\r\n        </div>\r\n        */}\r\n\r\n    </div>\r\n        {/*</div> */}\r\n        <div className=\"col-md-8 big\">\r\n         <div className=\"big-inner-childs-popup\">\r\n            <Link to=\"/person\">\r\n              <button className=\"backarrow\"> <img src= \"./Arrow-Left.svg\" /> </button>\r\n            </Link>\r\n          <div className=\"personcardpopup\">\r\n            <h4>Create your persona</h4>\r\n          <div className=\"popup\">\r\n            <div className=\"lb1\">\r\n              <label htmlFor=\"Full Name\">Age:</label><br></br>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"e.g 21\"\r\n                  value={age}\r\n                  onChange={(e) => setAge(e.target.value)}\r\n                />\r\n            </div>\r\n                    <div className=\"lb2\">\r\n                      <label htmlFor=\"Full Name\">Occupation:</label><br></br>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"e.g Software Engineer\"\r\n                        value={occupation}\r\n                        onChange={(e) => setOccupation(e.target.value)}\r\n                      />\r\n                    </div> \r\n\r\n                                \r\n        </div>\r\n        <div className=\"mtextarea pt-5\">\r\n                <label htmlFor=\"Description\">Describe your target customer:</label><br></br>\r\n                <textarea\r\n                  cols=\"80\"\r\n                  rows=\"5\"\r\n                  placeholder=\"e.g A Gen Z recent college graduate living in New York City who is looking for an app to manage personal finances\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n        </div>  \r\n\r\n        {/* <div className=\"mbuttonarea text-center\"> */}\r\n      {!isLoading ? (\r\n        <Link\r\n          to={\r\n            !isDisabled && age.trim() !== '' && occupation.trim() !== '' && description.trim() !== ''\r\n              ? \"/person\"\r\n              : \"#\"\r\n          }\r\n        >\r\n          <button className='customButton' disabled={isDisabled} title={isDisabled ? 'Max personas created' : undefined} onClick={() => { setButtonClicked(true); setLoading(true); handleNewPersonaClick(); }}>New Persona</button>\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          <button className='customButton' disabled={isDisabled} title={isDisabled ? 'Max personas created' : undefined} onClick={() => { setButtonClicked(true); setLoading(true); handleNewPersonaClick(); }}> \r\n          {buttonClicked && isLoading && <CircularProgress size={24} color=\"inherit\"/>}\r\n          New Persona</button> \r\n        </>\r\n      )}\r\n\r\n        {/* <Link to={!isLoading && !isDisabled && age.trim() !== '' && occupation.trim() !== '' && description.trim() !== '' ? '/person' : '#'}>\r\n          <button className='customButton' disabled={isDisabled} title={isDisabled ? 'Max personas created' : undefined} onClick={() => { setButtonClicked(true); setLoading(true); handleNewPersonaClick(); }}>\r\n          {isLoading ? (\r\n          <CircularProgress size={24} color=\"inherit\" />\r\n          ) : ( \r\n            'New Persona'\r\n          )}\r\n          </button>\r\n        </Link>   */}\r\n\r\n\r\n\r\n      <button onClick={clearInformation}>Clear Information</button>\r\n    </div>\r\n         </div>\r\n         </div>\r\n           \r\n        {/* </div> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Popup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}