{"ast":null,"code":"var _jsxFileName = \"/Users/kanshruti/Documents/GitHub/alias-web/alias_updated_git/src/componets/Interface.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport LeftSidebarinterviews from './Leftsidebarinterviews';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Interface() {\n  _s();\n  const [rows, setRows] = useState(1);\n  const textAreaRef = useRef(null);\n  const [message, setMessage] = useState('');\n  const handleInput = e => {\n    const text = e.target.value;\n    setMessage(text);\n    const lineHeight = 70; // Adjust according to your text area's line height\n    const maxRows = 3; // Maximum rows allowed\n\n    const lines = (textAreaRef.current.value + '\\n').match(/\\n/g).length || 1; // Count the number of lines\n\n    // Calculate the current height of the text area\n    const currentHeight = textAreaRef.current.scrollHeight;\n\n    // Calculate the maximum height when the row limit is reached\n    const maxHeight = lineHeight * maxRows;\n\n    // If the current height is greater than the maximum height, don't add a new line\n    if (currentHeight >= maxHeight) {\n      textAreaRef.current.value = textAreaRef.current.value.slice(0, -1);\n      return;\n    }\n\n    // Calculate the number of rows based on the current height\n    const calculatedRows = Math.ceil(currentHeight / lineHeight);\n\n    // Set the rows based on the calculated rows, capped at the maximum rows\n    textAreaRef.current.rows = Math.min(calculatedRows, maxRows);\n  };\n  const sendMessage = () => {\n    // You can send the 'message' state to your chatbot here\n    console.log('Sending message:', message);\n    setMessage('');\n    // Add your logic to send 'message' to your chatbot\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"home container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(LeftSidebarinterviews, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 big\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"sent-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./Users Icons.svg\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"test test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"received-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./Users Icons.svg\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"test test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big-inner-child\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"intervieinputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Ask a question.\",\n              id: \"interviewInput\",\n              class: \"input-box\",\n              ref: textAreaRef,\n              rows: rows,\n              value: message,\n              onInput: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendMessage,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./Reply.svg\",\n                alt: \"\",\n                className: \"intervieinputimgs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_s(Interface, \"PrO9Sr2PwhpVl4cJYgTTlP6+14w=\");\n_c = Interface;\nexport default Interface;\nvar _c;\n$RefreshReg$(_c, \"Interface\");","map":{"version":3,"names":["React","LeftSidebarinterviews","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Interface","_s","rows","setRows","textAreaRef","message","setMessage","handleInput","e","text","target","value","lineHeight","maxRows","lines","current","match","length","currentHeight","scrollHeight","maxHeight","slice","calculatedRows","Math","ceil","min","sendMessage","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","src","alt","placeholder","id","ref","onInput","onClick","_c","$RefreshReg$"],"sources":["/Users/kanshruti/Documents/GitHub/alias-web/alias_updated_git/src/componets/Interface.jsx"],"sourcesContent":["import React from 'react'\r\nimport LeftSidebarinterviews from './Leftsidebarinterviews'\r\nimport {useState , useRef } from 'react';\r\n\r\nfunction Interface() {\r\n\r\n  const [rows, setRows] = useState(1);\r\n  const textAreaRef = useRef(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleInput = (e) => {\r\n    const text = e.target.value;\r\n    setMessage(text);\r\n    const lineHeight = 70; // Adjust according to your text area's line height\r\n    const maxRows = 3; // Maximum rows allowed\r\n  \r\n    const lines = (textAreaRef.current.value + '\\n').match(/\\n/g).length || 1; // Count the number of lines\r\n  \r\n    // Calculate the current height of the text area\r\n    const currentHeight = textAreaRef.current.scrollHeight;\r\n  \r\n    // Calculate the maximum height when the row limit is reached\r\n    const maxHeight = lineHeight * maxRows;\r\n  \r\n    // If the current height is greater than the maximum height, don't add a new line\r\n    if (currentHeight >= maxHeight) {\r\n      textAreaRef.current.value = textAreaRef.current.value.slice(0, -1);\r\n      return;\r\n    }\r\n  \r\n    // Calculate the number of rows based on the current height\r\n    const calculatedRows = Math.ceil(currentHeight / lineHeight);\r\n  \r\n    // Set the rows based on the calculated rows, capped at the maximum rows\r\n    textAreaRef.current.rows = Math.min(calculatedRows, maxRows);\r\n  }  \r\n\r\n  const sendMessage = () => {\r\n    // You can send the 'message' state to your chatbot here\r\n    console.log('Sending message:', message);\r\n    setMessage('');\r\n    // Add your logic to send 'message' to your chatbot\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <section className='home container-fluid'>\r\n   {/* <div className=\"logo-section \">\r\n    \r\n  </div> */}\r\n    <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <LeftSidebarinterviews/>\r\n        </div>  \r\n    {/*<div className=\"left-sidebar\">\r\n        <div className=\"sidebartop\">\r\n        <div className=\"logo\">\r\n   <img src=\"./aliaslogodarksvg.svg\" alt=\"\" srcset=\"\" />\r\n   </div>\r\n  \r\n        <li className=''> <img src=\"./homeblack.svg\" alt=\"\" />Home</li>\r\n        \r\n        <li><img src=\"./personablack.svg\" alt=\"\" />Your personas</li>\r\n        <li className='active'> <img src=\"./chatwhite.svg\" alt=\"\" /> User interviews</li>\r\n        </div>\r\n        {/*}\r\n        <div className=\"sidebarbottom\">\r\n        <li> <img src=\"./tool-02.png\" alt=\"\" /> Integrations</li>\r\n        <li> <img src=\"./users-plus.png\" alt=\"\" />Billing</li>\r\n        <li><img src=\"./help outline.png\" alt=\"\" />Support</li>\r\n        </div>\r\n        */}\r\n    </div>\r\n        <div className=\"col-md-8 big\">\r\n         \r\n         {/* <div className=\"big-inners\"> */}\r\n           \r\n         <div class=\"sent-message\">\r\n            {/* {message} */}\r\n            <img src=\"./Users Icons.svg\" alt=\"\" />\r\n            <p>test test</p>\r\n          </div>\r\n\r\n          <div class=\"received-message\">\r\n            {/* {message} */}\r\n            {/* {receive user message} */}\r\n            <img src=\"./Users Icons.svg\" alt=\"\" />\r\n            <p>test test</p>\r\n          </div>\r\n\r\n          {/*}  \r\n           <div className=\"interviewtext\">\r\n            <div className=\"innerinterviewtext\">\r\n                <div className=\"interimg\">\r\n                    <img src=\"./Ellipse 63 (1).png\" alt=\"\" />\r\n                </div>\r\n                <div className=\"intertexts\">\r\n                    <h5>Interesting. Do you have an idea for a solution?\r\n</h5>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"interviewbuttons\">\r\n                <button>The problem we want to solve is the student debt crisis.</button>\r\n            </div>\r\n           </div>\r\n\r\n      */}\r\n         \r\n           \r\n          \r\n          {/*</div> */}\r\n          <div className=\"big-inner-child\">\r\n         <div className=\"intervieinputs\">\r\n          {/*}\r\n            <div className=\"tags\">\r\n                <span>Concept Testing</span>\r\n                <span>Problem Exploration</span>\r\n                <span>Design Feedback</span>\r\n                <span>Campaign Testing</span>\r\n                <span>Ad Testing</span>\r\n            </div>\r\n      */}\r\n            <textarea\r\n              placeholder=\"Ask a question.\"\r\n              id=\"interviewInput\" \r\n              class=\"input-box\"\r\n              ref={textAreaRef}\r\n              rows={rows}\r\n              value={message}\r\n              onInput={handleInput}\r\n            />\r\n            <button onClick={sendMessage}><img src=\"./Reply.svg\" alt=\"\" className='intervieinputimgs'/></button>\r\n            \r\n         </div>\r\n         </div>\r\n           \r\n        </div>\r\n    </section></>\r\n  )\r\n}\r\n\r\nexport default Interface"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}