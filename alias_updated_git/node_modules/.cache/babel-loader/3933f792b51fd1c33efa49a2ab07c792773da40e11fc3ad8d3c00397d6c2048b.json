{"ast":null,"code":"var _jsxFileName = \"/Users/kanshruti/Documents/GitHub/Social_Symbiote/alias_updated_git/src/componets/Person.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport LeftSidebarperson from './Leftsidebarperson';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { userdata } from './Signin';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Person() {\n  _s();\n  const [agentNames, setAgentNames] = useState([]);\n  const [agentName, setAgentName] = useState('');\n  const [agentAges, setAgentAges] = useState([]);\n  const [agentAge, setAgentAge] = useState('');\n  const [agentDescs, setAgentDescs] = useState([]);\n  const [agentDesc, setAgentDesc] = useState('');\n  const [agentLastInterviews, setAgentLastInterviews] = useState([]);\n  const [agentLastInterview, setAgentLastInterview] = useState('');\n  const [agentGenders, setAgentGenders] = useState([]);\n  const [agentGender, setAgentGender] = useState('');\n  const token = sessionStorage.getItem('token');\n  console.log(token);\n  const decoded = jwtDecode(token);\n  console.log(decoded);\n  // Now you can access the user data in the decoded object\n\n  const {\n    user: userObject\n  } = decoded;\n  console.log(userObject);\n  const updateProfilePicture = (name, index) => {\n    fetch('http://localhost:5432/updateProfilePicture', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        profile_picture: index + 1\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data); // Logging the response from the API\n      // Handle any UI changes or further actions if needed\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  useEffect(() => {\n    fetch('http://localhost:5432/getAgentName', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userObject.email\n      }) // Ensure the body is an object\n    }).then(response => response.json()) // Try parsing response as JSON\n    .then(data => {\n      {/* console.log('Response:', data.name); // Log the full response\r\n       setAgentName(data.name);\r\n       */}\n      if (data.names) {\n        console.log('Multiple Names:', data.names);\n        // Store the array in the state or variable\n        setAgentNames(data.names);\n        setAgentName('');\n      } else if (data.name) {\n        console.log('Single Name:', data.name);\n        // Handle a single name separately\n        setAgentName(data.name);\n        setAgentNames([]);\n      } else {\n        console.error('Error:', data); // Log any unexpected response\n      }\n      // ... rest of your code\n    }).catch(error => console.error('Error:', error));\n    fetch('http://localhost:5432/getAgentDesc', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userObject.email\n      }) // Ensure the body is an object\n    }).then(response => response.json()) // Try parsing response as JSON\n    .then(data => {\n      {/* console.log('Response:', data.name); // Log the full response\r\n       setAgentName(data.name);\r\n       */}\n      if (data.descs) {\n        console.log('Multiple Descriptions:', data.descs);\n        // Store the array in the state or variable\n        setAgentDescs(data.descs);\n        setAgentDesc('');\n      } else if (data.desc) {\n        console.log('Single Name:', data.desc);\n        // Handle a single name separately\n        setAgentDesc(data.desc);\n        setAgentDescs([]);\n      } else {\n        console.error('Error:', data); // Log any unexpected response\n      }\n      // ... rest of your code\n    }).catch(error => console.error('Error:', error));\n    fetch('http://localhost:5432/getAgentLastInterview', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userObject.email\n      }) // Ensure the body is an object\n    }).then(response => response.json()) // Try parsing response as JSON\n    .then(data => {\n      {/* console.log('Response:', data.name); // Log the full response\r\n       setAgentName(data.name);\r\n       */}\n      if (data.days) {\n        console.log('Multiple Interviews:', data.days);\n        // Store the array in the state or variable\n        setAgentLastInterviews(data.days);\n        setAgentLastInterview('');\n      } else if (data.day) {\n        console.log('Single Interview:', data.day);\n        // Handle a single name separately\n        setAgentLastInterview(data.day);\n        setAgentLastInterviews([]);\n      } else {\n        console.error('Error:', data); // Log any unexpected response\n      }\n      // ... rest of your code\n    }).catch(error => console.error('Error:', error));\n    fetch('http://localhost:5432/getAgentGender', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userObject.email\n      }) // Ensure the body is an object\n    }).then(response => response.json()) // Try parsing response as JSON\n    .then(data => {\n      {/* console.log('Response:', data.name); // Log the full response\r\n       setAgentName(data.name);\r\n       */}\n      if (data.genders) {\n        console.log('Multiple Genders:', data.genders);\n        // Store the array in the state or variable\n        setAgentGenders(data.genders);\n        setAgentGender('');\n      } else if (data.gender) {\n        console.log('Single Gender:', data.gender);\n        // Handle a single name separately\n        setAgentGender(data.gender);\n        setAgentGenders([]);\n      } else {\n        console.error('Error:', data); // Log any unexpected response\n      }\n      // ... rest of your code\n    }).catch(error => console.error('Error:', error));\n    fetch('http://localhost:5432/getAgentAge', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: userObject.email\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.ages) {\n        console.log('Multiple Ages:', data.ages);\n        // Store the array in the state or variable\n        setAgentAges(data.ages);\n        setAgentAge('');\n      } else if (data.age) {\n        console.log('Single Ages:', data.age);\n        // Handle a single name separately\n        setAgentAge(data.age);\n        setAgentAges([]);\n      } else {\n        console.error('Error:', data); // Log any unexpected response\n      }\n      /* console.log('Agent Age:', data.age);\r\n      setAgentAge(data.age); */\n    }).catch(error => console.error('Error:', error));\n    if (agentNames.length > 0) {\n      const lastIndex = agentNames.length - 1;\n      updateProfilePicture(agentNames[lastIndex], lastIndex);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"home container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(LeftSidebarperson, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 big\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big-inner-childs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/popup\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"./add.svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" New Persona\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: agentNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"personcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"car1 d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${process.env.PUBLIC_URL}/avatars/${agentGenders[index]}/${index + 1}.svg`,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"car1text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [agentAges[index], \" yrs - Software Engineer\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"car2\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Last Interviewed: \", agentLastInterviews[index], \" days ago\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [agentDescs[index], \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Person, \"QpsTOstnyP1f6KfyUXJLfzl1Hmg=\");\n_c = Person;\nexport default Person;\nvar _c;\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"names":["React","LeftSidebarperson","Link","useEffect","useState","userdata","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","Person","_s","agentNames","setAgentNames","agentName","setAgentName","agentAges","setAgentAges","agentAge","setAgentAge","agentDescs","setAgentDescs","agentDesc","setAgentDesc","agentLastInterviews","setAgentLastInterviews","agentLastInterview","setAgentLastInterview","agentGenders","setAgentGenders","agentGender","setAgentGender","token","sessionStorage","getItem","console","log","decoded","user","userObject","updateProfilePicture","name","index","fetch","method","headers","body","JSON","stringify","profile_picture","then","response","json","data","catch","error","email","names","descs","desc","days","day","genders","gender","ages","age","length","lastIndex","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","src","map","process","env","PUBLIC_URL","alt","_c","$RefreshReg$"],"sources":["/Users/kanshruti/Documents/GitHub/Social_Symbiote/alias_updated_git/src/componets/Person.jsx"],"sourcesContent":["import React from 'react'\r\nimport LeftSidebarperson from './Leftsidebarperson'\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { userdata } from './Signin';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\n\r\nfunction Person() {\r\n    const [agentNames, setAgentNames] = useState([]);\r\n    const [agentName, setAgentName] = useState('');\r\n    const [agentAges, setAgentAges] = useState([]);\r\n    const [agentAge, setAgentAge] = useState('');\r\n    const [agentDescs, setAgentDescs] = useState([]);\r\n    const [agentDesc, setAgentDesc] = useState('');\r\n    const [agentLastInterviews, setAgentLastInterviews] = useState([]);\r\n    const [agentLastInterview, setAgentLastInterview] = useState('');\r\n    const [agentGenders, setAgentGenders] = useState([]);\r\n    const [agentGender, setAgentGender] = useState('');\r\n    const token = sessionStorage.getItem('token');\r\n    console.log(token)\r\n\r\n\r\n        const decoded = jwtDecode(token);\r\n        console.log(decoded);\r\n        // Now you can access the user data in the decoded object\r\n\r\n\r\n    const { user: userObject } = decoded;\r\n    console.log(userObject);\r\n\r\n    const updateProfilePicture = (name, index) => {\r\n        fetch('http://localhost:5432/updateProfilePicture', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ name: name, profile_picture: index + 1 }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); // Logging the response from the API\r\n                // Handle any UI changes or further actions if needed\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n     };\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('http://localhost:5432/getAgentName', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.names) {\r\n                console.log('Multiple Names:', data.names);\r\n                // Store the array in the state or variable\r\n                setAgentNames(data.names);\r\n                setAgentName('');\r\n            } else if (data.name) {\r\n                console.log('Single Name:', data.name);\r\n                // Handle a single name separately\r\n                setAgentName(data.name);\r\n                setAgentNames([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n        \r\n        fetch('http://localhost:5432/getAgentDesc', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.descs) {\r\n                console.log('Multiple Descriptions:', data.descs);\r\n                // Store the array in the state or variable\r\n                setAgentDescs(data.descs);\r\n                setAgentDesc('');\r\n            } else if (data.desc) {\r\n                console.log('Single Name:', data.desc);\r\n                // Handle a single name separately\r\n                setAgentDesc(data.desc);\r\n                setAgentDescs([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n\r\n\r\n        fetch('http://localhost:5432/getAgentLastInterview', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.days) {\r\n                console.log('Multiple Interviews:', data.days);\r\n                // Store the array in the state or variable\r\n                setAgentLastInterviews(data.days);\r\n                setAgentLastInterview('');\r\n            } else if (data.day) {\r\n                console.log('Single Interview:', data.day);\r\n                // Handle a single name separately\r\n                setAgentLastInterview(data.day);\r\n                setAgentLastInterviews([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n\r\n        fetch('http://localhost:5432/getAgentGender', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }), // Ensure the body is an object\r\n        })\r\n        .then((response) => response.json()) // Try parsing response as JSON\r\n        .then((data) => {\r\n            {/* console.log('Response:', data.name); // Log the full response\r\n            setAgentName(data.name);\r\n            */}\r\n            if (data.genders) {\r\n                console.log('Multiple Genders:', data.genders);\r\n                // Store the array in the state or variable\r\n                setAgentGenders(data.genders);\r\n                setAgentGender('');\r\n            } else if (data.gender) {\r\n                console.log('Single Gender:', data.gender);\r\n                // Handle a single name separately\r\n                setAgentGender(data.gender);\r\n                setAgentGenders([]);\r\n            } else {\r\n                console.error('Error:', data); // Log any unexpected response\r\n            }\r\n            // ... rest of your code\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n            \r\n\r\n\r\n        fetch('http://localhost:5432/getAgentAge', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: userObject.email }),\r\n        })\r\n        \r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.ages) {\r\n                    console.log('Multiple Ages:', data.ages);\r\n                    // Store the array in the state or variable\r\n                    setAgentAges(data.ages);\r\n                    setAgentAge('');\r\n                } else if (data.age) {\r\n                    console.log('Single Ages:', data.age);\r\n                    // Handle a single name separately\r\n                    setAgentAge(data.age);\r\n                    setAgentAges([]);\r\n                } else {\r\n                    console.error('Error:', data); // Log any unexpected response\r\n                }\r\n                /* console.log('Agent Age:', data.age);\r\n                setAgentAge(data.age); */\r\n            })\r\n            .catch((error) => console.error('Error:', error));   \r\n            \r\n        if (agentNames.length > 0) {\r\n            const lastIndex = agentNames.length - 1;\r\n            updateProfilePicture(agentNames[lastIndex], lastIndex);\r\n        }\r\n    }, []); \r\n\r\n\r\n  return (\r\n    <>\r\n    <section className='home container-fluid'>\r\n   {/*<div className=\"logo-section \"> \r\n    \r\n   </div>*/}\r\n    <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n            <LeftSidebarperson/>\r\n        </div>    \r\n        {/*}    \r\n        <div className=\"left-sidebar\">\r\n        <div className=\"sidebartop\">\r\n        <div className=\"logo\">\r\n            <img src=\"./aliaslogodarksvg.svg\" alt=\"\" srcset=\"\" />\r\n            </div>\r\n\r\n        <li className=''> <img src=\"./homeblack.svg\" alt=\"\" />Home</li>\r\n        \r\n        <li className='active'><img src=\"./personawhite.svg\" alt=\"\" />Your personas</li>\r\n        <li> <img src=\"./chatblack.svg\" alt=\"\" /> User interviews</li>\r\n        </div>\r\n        {/*}\r\n        <div className=\"sidebarbottom\">\r\n        <li> <img src=\"./tool-02.png\" alt=\"\" /> Integrations</li>\r\n        <li> <img src=\"./users-plus.png\" alt=\"\" />Billing</li>\r\n        <li><img src=\"./help outline.png\" alt=\"\" />Support</li>\r\n        </div>\r\n        */}\r\n    </div>\r\n        {/*</div>*/}\r\n        <div className=\"col-md-8 big\">\r\n         <div className=\"big-inner-childs\">\r\n             {/*}\r\n           <div className=\"project\">\r\n\r\n\r\n           <div className=\"selecti\">\r\n           <select name=\"cars\" id=\"cars\">\r\n                <option value=\"Most Recent\">Most Recent</option>\r\n                <option value=\"saab\">Saab</option>\r\n                <option value=\"mercedes\">Mercedes</option>\r\n                <option value=\"audi\">Audi</option>\r\n           </select>\r\n            </div>\r\n            \r\n                <button>+  New Project</button>\r\n               \r\n            </div>\r\n            */} \r\n\r\n            <div className=\"person\">\r\n                <Link to=\"/popup\">\r\n                    <button> \r\n                        <img src=\"./add.svg\"/>\r\n                        <span> New Persona</span>\r\n                    </button>\r\n                </Link>    \r\n            </div>\r\n\r\n            <div className =\"container\">\r\n                {agentNames.map((name, index) => (\r\n                    <div className=\"personcard\" key={index}>\r\n                    <div className=\"car1 d-flex\">\r\n                        <img src={`${process.env.PUBLIC_URL}/avatars/${agentGenders[index]}/${index + 1}.svg`} alt=\"\" />  \r\n                        <div className=\"car1text\">\r\n                        <h5>{name}</h5>\r\n                        <p>{agentAges[index]} yrs - Software Engineer</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"car2\">\r\n                        <p>Last Interviewed: {agentLastInterviews[index]} days ago</p>\r\n                        <p>{agentDescs[index]} </p>\r\n                    </div>\r\n                    {/*<div className=\"car3\">\r\n                        <img src=\"./Group 46.png\" alt=\"\" />\r\n                    </div>\r\n                    */}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {/*}\r\n            <div className=\"personcard\">\r\n                <div className=\"car1 d-flex\">\r\n                    <img src=\"./Ellipse 63.png\" alt=\"\" />\r\n                    <div className=\"car1text\">\r\n                    <h5>{agentName}</h5>\r\n                    <p>{agentAge} yrs - Software Engineer</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"car2\">\r\n                    <p>Last Interviewed: 2 days ago</p>\r\n                    <p>A 22 year old college graduate struggling to pay<br></br> off his student debt.</p>\r\n                </div>\r\n                <div className=\"car3\">\r\n                    <img src=\"./Group 46.png\" alt=\"\" />\r\n                </div>\r\n            </div>\r\n                */}\r\n         </div>\r\n           \r\n        </div>\r\n    {/*</div> */}\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Person"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}